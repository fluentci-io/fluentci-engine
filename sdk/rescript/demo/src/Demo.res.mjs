// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Sdk from "jsr:@fluentci/sdk";

var secret = Sdk.dag.setSecret("GITHUB", "my-github-token");

console.log(await secret.plaintext());

var secretDemo = await Sdk.dag.pipeline("secret-demo").withSecretVariable("GITHUB", secret).withExec(["echo $GITHUB"]).stdout();

console.log("Secret demo: " + secretDemo);

var cache = Sdk.dag.cache("pixi");

console.log("cacheId: " + await cache.id());

var ping = Sdk.dag.pipeline("demo").nix({
            impure: true
          }).withWorkdir("nix-demo").withExec([
        "ping",
        "fluentci.io"
      ]).asService("ping_service");

console.log("Ping service: " + await ping.id());

var pingGithub = Sdk.dag.pipeline("ping-github").pkgx().withPackages(["ping"]).withExec([
        "ping",
        "github.com"
      ]).asService("ping_github");

var stdout = await Sdk.dag.pipeline("demo").pkgx().withPackages(["ping"]).withService(ping).withService(pingGithub).withExec([
            "sleep",
            "15"
          ]).withExec([
          "ls",
          "-ltr",
          ".fluentci"
        ]).withExec([
        "cat",
        ".fluentci/process-compose.yaml"
      ]).stdout();

console.log("Stdout: " + stdout);

var mise = await Sdk.dag.pipeline("mise-demo").mise().withWorkdir("./mise-demo").trust().withExec([
          "mise",
          "--version"
        ]).withExec([
        "which",
        "bun"
      ]).stdout();

console.log("Mise: " + mise);

var git = await Sdk.dag.git("https://github.com/tsirysndr/me").branch("main").tree().withExec(["pwd"]).stdout();

console.log("Git: " + git);

var gitEntries = await Sdk.dag.git("https://github.com/tsirysndr/me").branch("main").tree().entries();

console.log("Git entries: ");

console.log(gitEntries);

var dir = await Sdk.dag.directory(".").entries();

console.log("Directory entries at '.': ");

console.log(dir);

var hermit = await Sdk.dag.hermit().withWorkdir("./hermit-demo").withExec([
        "which",
        "jq"
      ]).stdout();

console.log("Hermit: ");

console.log(hermit);

export {
  secret ,
  secretDemo ,
  cache ,
  ping ,
  pingGithub ,
  stdout ,
  mise ,
  git ,
  gitEntries ,
  dir ,
  hermit ,
}
/* secret Not a pure module */
