name: release
on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - uses: fluentci-io/setup-fluentci@v5
        with:
          engine-version: 0.4.12
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Build
        run: |
          fluentci run . build
          ls -ltr
        env:
          TAG: ${{ env.RELEASE_VERSION }}
          TARGET: ${{ matrix.target }}
          DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}
      #- name: Upload assets to Cloudflare R2
      #  run: |
      #    mkdir -p r2/fluentci-engine/${{ env.RELEASE_VERSION }}
      #    cp fluentci-engine_${{ env.RELEASE_VERSION }}_${{ matrix.target }}.tar.gz r2/fluentci-engine/${{ env.RELEASE_VERSION }}
      #    cp fluentci-engine_${{ env.RELEASE_VERSION }}_${{ matrix.target }}.tar.gz.sha256 r2/fluentci-engine/${{ env.RELEASE_VERSION }}
      #    cd r2 && fluentci run --wasm r2-sync upload --endpoint-url https://$ACCOUNT_ID.r2.cloudflarestorage.com s3://assets
      #  env:
      #    TAG: ${{ env.RELEASE_VERSION }}
      #    AWS_ACCESS_KEY_ID: ${{ secrets.R2_AWS_ACCESS_KEY_ID }}
      #    AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_AWS_SECRET_ACCESS_KEY }}
      #    ACCOUNT_ID: fe5b1e2ce9f94f4c0415ab94ce402012
      - name: Upload release assets
        run: |
          for ext in tar.gz tar.gz.sha256; do
            export FILE=/assets/fluentci-engine_${{ env.RELEASE_VERSION }}_${{ matrix.target }}.$ext
            fluentci run github_pipeline release_upload
          done
        env:
          TAG: ${{ env.RELEASE_VERSION }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
